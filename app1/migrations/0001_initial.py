# Generated by Django 4.2.7 on 2023-11-24 03:50

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DoNotEnter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_code', models.CharField(max_length=100)),
                ('audio', models.FileField(upload_to='zip_files')),
            ],
        ),
        migrations.CreateModel(
            name='JuzAudio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio1', models.FileField(upload_to='juz_sharti', verbose_name='1-juz sharti')),
                ('audio2', models.FileField(upload_to='juz_sharti', verbose_name='2-juz sharti')),
                ('audio3', models.FileField(upload_to='juz_sharti', verbose_name='3-juz sharti')),
            ],
        ),
        migrations.CreateModel(
            name='Part1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500, verbose_name='savol')),
                ('audio', models.FileField(upload_to='part1')),
            ],
            options={
                'verbose_name': 'Juz_1',
                'verbose_name_plural': 'Juz_1',
            },
        ),
        migrations.CreateModel(
            name='Part2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=150, verbose_name='Mavzu')),
                ('question1', models.CharField(max_length=500, verbose_name='savol_1')),
                ('question2', models.CharField(max_length=500, verbose_name='savol_2')),
                ('question3', models.CharField(max_length=500, verbose_name='savol_3')),
                ('question4', models.CharField(max_length=500, verbose_name='savol_4')),
                ('question5', models.CharField(max_length=500, verbose_name='savol_5')),
                ('audio', models.FileField(upload_to='part2')),
            ],
            options={
                'verbose_name': 'Juz_2',
                'verbose_name_plural': 'Juz_2',
            },
        ),
        migrations.CreateModel(
            name='Part3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=150, verbose_name='Mavzu')),
                ('question1', models.CharField(max_length=500, verbose_name='savol_1')),
                ('audio1', models.FileField(upload_to='part3')),
                ('question2', models.CharField(max_length=500, verbose_name='savol_2')),
                ('audio2', models.FileField(upload_to='part3')),
                ('question3', models.CharField(max_length=500, verbose_name='savol_3')),
                ('audio3', models.FileField(upload_to='part3')),
                ('question4', models.CharField(max_length=500, verbose_name='savol_4')),
                ('audio4', models.FileField(upload_to='part3')),
                ('question5', models.CharField(max_length=500, verbose_name='savol_5')),
                ('audio5', models.FileField(upload_to='part3')),
            ],
            options={
                'verbose_name': 'Juz_3',
                'verbose_name_plural': 'Juz_3',
            },
        ),
        migrations.CreateModel(
            name='TestTaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_code', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('surname', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Time_Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part1_question_time', models.PositiveIntegerField(default=30, verbose_name='1 juz savollariga javob berish davomiyligi')),
                ('part1_waiting_time', models.PositiveIntegerField(default=5, verbose_name="Savollar yozib olinishi boshlangunigacha bo'lgan vaqt")),
                ('part2_question_time', models.PositiveIntegerField(default=120, verbose_name='2 juz savollariga javob berish davomiyligi')),
                ('part2_waiting_time', models.PositiveIntegerField(default=60, verbose_name="1 va 2 juzlar oralig'i")),
                ('part3_question_time', models.PositiveIntegerField(default=30, verbose_name='3 juz savollariga javob berish davomiyligi')),
                ('part3_waiting_time', models.PositiveIntegerField(default=5, verbose_name='2 va 3 juzlar orasidagi kutish vaqti')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Vaqt sozlamalari',
                'verbose_name_plural': 'Vaqt sozlamalari',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(auto_now_add=True)),
                ('end_date', models.DateField(default=datetime.date(2023, 11, 25), verbose_name="Saytdan foydalanish so'ngi muddati")),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
